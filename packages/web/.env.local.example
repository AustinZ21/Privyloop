# Next.js Web Application Environment Variables
# Copy this file to .env.local for local development

# =============================================================================
# NEXT.JS CONFIGURATION
# =============================================================================

# Next.js environment
NEXT_PUBLIC_APP_URL=http://localhost:3030
NEXT_PUBLIC_API_URL=http://localhost:3030/api

# =============================================================================
# AUTHENTICATION (Public Variables)
# =============================================================================

# Public authentication configuration
NEXT_PUBLIC_AUTH_URL=http://localhost:3030
NEXT_PUBLIC_DEPLOYMENT_MODE=self-hosted

# Next.js development server port
PORT=3030

# =============================================================================
# FEATURE FLAGS (Public)
# =============================================================================

# Public feature flags that control UI rendering
NEXT_PUBLIC_ENABLE_SOCIAL_AUTH=true
NEXT_PUBLIC_ENABLE_EMAIL_VERIFICATION=true
NEXT_PUBLIC_ENABLE_SUBSCRIPTION_TIERS=false

# =============================================================================
# DATABASE & AUTH (Server-side only)
# =============================================================================

# These variables are not exposed to the browser
DATABASE_URL=postgresql://username:password@localhost:5432/privyloop
BETTER_AUTH_SECRET=your-super-secret-key-here-minimum-32-characters

# =============================================================================
# EMAIL CONFIGURATION (Server-side only)
# =============================================================================

# Example using Gmail (recommended for development):
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-actual-email@gmail.com
SMTP_PASS=your-gmail-app-password  # Generate at https://myaccount.google.com/apppasswords
FROM_NAME=PrivyLoop
FROM_EMAIL=noreply@yourdomain.com

# =============================================================================
# OAUTH PROVIDERS (Server-side only)
# =============================================================================
# GitHub OAuth Setup (5 minutes):
# 1. Go to: https://github.com/settings/applications/new
# 2. App name: "PrivyLoop Local Development"
# 3. Homepage URL: http://localhost:3030
# 4. Authorization callback URL: http://localhost:3030/api/auth/callback/github
## Configure in packages/web/.env.local:
GITHUB_CLIENT_ID=...
GITHUB_CLIENT_SECRET=...

# Google OAuth Setup (5 minutes):
# 1. Go to: https://console.cloud.google.com
# 2. Configure OAuth consent screen (External/Internal) in Google Cloud Console
# 3. APIs & Services → Credentials → Create OAuth 2.0 Client ID (Web application)
# 4. Web application type
# 5. Authorized origins: http://localhost:3030
# 6. Authorized redirect URIs: http://localhost:3030/api/auth/callback/google
## Configure in packages/web/.env.local:
GOOGLE_CLIENT_ID=...
GOOGLE_CLIENT_SECRET=...

# Microsoft OAuth Setup (optional):
# 1. Go to: https://portal.azure.com/#view/Microsoft_AAD_RegisteredApps/ApplicationsListBlade
# 2. New registration → Web platform
# 3. Redirect URI: http://localhost:3030/api/auth/callback/microsoft
## Configure in packages/web/.env.local:
MICROSOFT_CLIENT_ID=...
MICROSOFT_CLIENT_SECRET=...

# OAuth Security Configuration (recommended for production)
# OAUTH_REDIRECT_BASE_URL=https://yourdomain.com  # Override base URL for callbacks
# Note: Callback paths are fixed:
#   - GitHub: /api/auth/callback/github
#   - Google: /api/auth/callback/google
#   - Microsoft: /api/auth/callback/microsoft


# OAuth Security (recommended for production)
OAUTH_REDIRECT_BASE_URL=http://localhost:3030

# =============================================================================
# EXTERNAL SERVICES (Server-side only)
# =============================================================================

GEMINI_API_KEY=your-gemini-api-key
FIRECRAWL_API_KEY=your-firecrawl-api-key